/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventasdao.ui.abm;


import java.util.logging.Level;
import java.util.logging.Logger;


import java.util.ArrayList;
import java.util.List;
import ventasdao.controladores.DetalleFacturaControlador;
import ventasdao.controladores.FacturaControlador;
import ventasdao.controladores.UpdateStockControlador;
import ventasdao.objetos.DetalleFactura;
import ventasdao.objetos.DetalleFacturaAnulacion;
import ventasdao.objetos.Factura;
import ventasdao.objetos.ObjetoFacturaAnulacion;
import ventasdao.ui.grilla.GrillaDetalleFacturaAnulacion;
import ventasdao.ui.grilla.GrillaFacturaAnulacion;

/**
 *
 * @author Esteban DAlbano
 */
public class FacturaAnulacion extends javax.swing.JInternalFrame {
    
    
    private FacturaControlador facturaControlador;
    
    private DetalleFacturaControlador detalleFacturaControlador;
    
    private UpdateStockControlador updateSC;
    
    ObjetoFacturaAnulacion objetoFacturaAnulacion;
    
    GrillaFacturaAnulacion grillaFacturaAnulacion;
    
    GrillaDetalleFacturaAnulacion grillaDetalleFacturaAnulacion;
    
    ArrayList<ObjetoFacturaAnulacion> objetoFacturaAnulaciones;
    
    ArrayList <DetalleFacturaAnulacion> objetoDetalleFacturaAnulaciones;
    
    ArrayList <DetalleFactura> detalleFacturas;
       
             
    
    /**
     * Creates new form FacturaAnulacion
     */
    public FacturaAnulacion() {
        initComponents();
        
       cargarTablaFactAnu ();
        
    }

    
    
    
    void cargarTablaFactAnu (){
        
       objetoFacturaAnulaciones = new ArrayList <> ();
       
       facturaControlador = new FacturaControlador();
        
      // objetoFacturaAnulacion = new ObjetoFacturaAnulacion();
       
       
       
       try {
           objetoFacturaAnulaciones = facturaControlador.listar2();
           grillaFacturaAnulacion = new GrillaFacturaAnulacion(objetoFacturaAnulaciones);
           jtFacturas.setModel(grillaFacturaAnulacion);
           
/*         
///// Estas dos lineas me solucionaron el problema que tenia al filtrar por nombre no me mostraba despues todas las filas al seleccionar una catgoria
            trs = new TableRowSorter(jtListadoProductos.getModel());
            jtListadoProductos.setRowSorter(trs);  /////
           */
           
       } catch (Exception ex) {
           Logger.getLogger(FacturaGetProducto.class.getName()).log(Level.SEVERE, null, ex);
       }
        
        
        
        
    }
    
    void LimpiarDetalleFacturas(int fact_id) {
        
           
            objetoDetalleFacturaAnulaciones = new ArrayList <> ();
       
            detalleFacturaControlador = new DetalleFacturaControlador();
            
            try {
               objetoDetalleFacturaAnulaciones = detalleFacturaControlador.listar(fact_id);
           grillaDetalleFacturaAnulacion = new GrillaDetalleFacturaAnulacion(objetoDetalleFacturaAnulaciones);
            jtDetalleFacturas.setModel(grillaDetalleFacturaAnulacion);
               
             /*
               ///// Estas dos lineas me solucionaron el problema que tenia al filtrar por nombre no me mostraba despues todas las filas al seleccionar una catgoria 
               trs = new TableRowSorter(jtListadoProductos.getModel()); 
            jtListadoProductos.setRowSorter(trs);  /////
             */
               
           } catch (Exception ex) {
               Logger.getLogger(FacturaGetProducto.class.getName()).log(Level.SEVERE, null, ex);
           }
            
    }     
        
        
        
      
    
        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtFacturas = new javax.swing.JTable();
        jbAnular = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtDetalleFacturas = new javax.swing.JTable();
        jbQuitarArticulo = new javax.swing.JButton();
        jtfNumFactura = new javax.swing.JTextField();
        jtfArticuloId = new javax.swing.JTextField();

        setClosable(true);
        setResizable(true);
        setTitle("Anulacion Factura");

        jtFacturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtFacturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtFacturasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtFacturas);

        jbAnular.setText("Anular factura");
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        jtDetalleFacturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtDetalleFacturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDetalleFacturasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtDetalleFacturas);

        jbQuitarArticulo.setText("Quitar articulo");
        jbQuitarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuitarArticuloActionPerformed(evt);
            }
        });

        jtfNumFactura.setEditable(false);
        jtfNumFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNumFacturaActionPerformed(evt);
            }
        });

        jtfArticuloId.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 16, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 914, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(jbAnular)
                .addGap(38, 38, 38)
                .addComponent(jtfNumFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(248, 248, 248)
                .addComponent(jbQuitarArticulo)
                .addGap(27, 27, 27)
                .addComponent(jtfArticuloId, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAnular)
                    .addComponent(jbQuitarArticulo)
                    .addComponent(jtfNumFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfArticuloId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtFacturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtFacturasMouseClicked
        // TODO add your handling code here:
        
        int filasele = jtFacturas.getSelectedRow();
        
        String fact_id_S = jtFacturas.getValueAt(filasele, 0).toString();
        
        int fact_id_I = Integer.parseInt(fact_id_S);
        
        jtfNumFactura.setText(fact_id_S);
        
        if(filasele !=-1){
            
            objetoDetalleFacturaAnulaciones = new ArrayList <> ();
       
            detalleFacturaControlador = new DetalleFacturaControlador();
            
            try {
               objetoDetalleFacturaAnulaciones = detalleFacturaControlador.listar(fact_id_I);
           grillaDetalleFacturaAnulacion = new GrillaDetalleFacturaAnulacion(objetoDetalleFacturaAnulaciones);
            jtDetalleFacturas.setModel(grillaDetalleFacturaAnulacion);
               
             /*
               ///// Estas dos lineas me solucionaron el problema que tenia al filtrar por nombre no me mostraba despues todas las filas al seleccionar una catgoria 
               trs = new TableRowSorter(jtListadoProductos.getModel()); 
            jtListadoProductos.setRowSorter(trs);  /////
             */
               
           } catch (Exception ex) {
               Logger.getLogger(FacturaGetProducto.class.getName()).log(Level.SEVERE, null, ex);
           }
            
            
        }
        
    }//GEN-LAST:event_jtFacturasMouseClicked

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
        // TODO add your handling code here:
        
        int filasele = jtFacturas.getSelectedRow();
        
        String fact_id_S = jtFacturas.getValueAt(filasele, 0).toString();
        
        int fact_id_I = Integer.parseInt(fact_id_S);
        
        
        // Cargo el ArrayList con el listado del detalle_factura a eliminar
        try {
            detalleFacturas = detalleFacturaControlador.listar2(fact_id_I);
        } catch (Exception ex) {
            Logger.getLogger(FacturaAnulacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Actualizo el Stock en la base de datos antes de eliminar los registros
        updateSC = new UpdateStockControlador();
        
        try {
            updateSC.incrementar(detalleFacturas);
        } catch (Exception ex) {
            Logger.getLogger(FacturaAnulacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        try {
            detalleFacturaControlador.eliminar(fact_id_I);
        } catch (Exception ex) {
            Logger.getLogger(FacturaAnulacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        try {
            facturaControlador.eliminar(fact_id_I);
        } catch (Exception ex) {
            Logger.getLogger(FacturaAnulacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        cargarTablaFactAnu ();
        
        LimpiarDetalleFacturas(fact_id_I);
        
        
        
    }//GEN-LAST:event_jbAnularActionPerformed

    private void jbQuitarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbQuitarArticuloActionPerformed
        // TODO add your handling code here: lo que necesito hacer es traer el id del articulo a la tabla
        
        
        String factIdS=jtfNumFactura.getText();
        Integer fact_Id= Integer.parseInt(factIdS);
        
        /*Si niguna fila esta seleccionada el valor capturado sera -1 */
        int filaSele2= jtDetalleFacturas.getSelectedRow(); 
        
        if(filaSele2!=-1) {  
            
            String id_S= jtDetalleFacturas.getValueAt(filaSele2, 0).toString();
            int id= Integer.parseInt(id_S);
            String p_ventaS=jtDetalleFacturas.getValueAt(filaSele2, 3).toString();
            float p_venta= Float.parseFloat(p_ventaS);
            String cantidad_S=jtDetalleFacturas.getValueAt(filaSele2, 4).toString();
            int cantidad= Integer.parseInt(cantidad_S);
            String codigo=jtDetalleFacturas.getValueAt(filaSele2, 1).toString();
            String proveedor=jtDetalleFacturas.getValueAt(filaSele2, 5).toString();
            
            float decMontoTot= p_venta * cantidad;
            
            
            
            /* Elimino el articulo seleccionado de la factura*/
            try {
                detalleFacturaControlador.eliminar2(id);
            } catch (Exception ex) {
                Logger.getLogger(FacturaAnulacion.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            /* Modifico el monto total en la factura luego de eliminar un articulo*/
            try {
                facturaControlador.modificar_Monto(decMontoTot, fact_Id);
            } catch (Exception ex) {
                Logger.getLogger(FacturaAnulacion.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            cargarTablaFactAnu();
            
            
            objetoDetalleFacturaAnulaciones = new ArrayList <> ();
       
            detalleFacturaControlador = new DetalleFacturaControlador();
            
            try {
               objetoDetalleFacturaAnulaciones = detalleFacturaControlador.listar(fact_Id);
           grillaDetalleFacturaAnulacion = new GrillaDetalleFacturaAnulacion(objetoDetalleFacturaAnulaciones);
            jtDetalleFacturas.setModel(grillaDetalleFacturaAnulacion);
               
             /*
               ///// Estas dos lineas me solucionaron el problema que tenia al filtrar por nombre no me mostraba despues todas las filas al seleccionar una catgoria 
               trs = new TableRowSorter(jtListadoProductos.getModel()); 
            jtListadoProductos.setRowSorter(trs);  /////
             */
               
           } catch (Exception ex) {
               Logger.getLogger(FacturaGetProducto.class.getName()).log(Level.SEVERE, null, ex);
           }
            
            // Actualizo el Stock en la base de datos antes de eliminar los registros
        updateSC = new UpdateStockControlador();
        
        /*Creo un objeto del tipo detallefactura para almacenar valores capturados de la tabla jtdetallefacturas
        los cuales son necesarios para impactar el incremento en la BD */
        DetalleFactura incStock = new DetalleFactura(); 
        incStock.setCantidad(cantidad);
        incStock.setCodigo(codigo);
        incStock.setProveedor(proveedor);
      
        
        
        
        
        try {
            updateSC.incrementar2(incStock);
        } catch (Exception ex) {
            Logger.getLogger(FacturaAnulacion.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
            
        }
        
        /*Aqui el codigo para eliminar automaticamente la factura si se elimina el ultimo articulo de la factura*/
        //jtfZiseTable.setText(String.valueOf(jtListadoProductos.getRowCount()));
        int zisejtfacturas = jtFacturas.getRowCount();
        int facturaId = Integer.parseInt(jtfNumFactura.getText());
       
        for(int i=0;i<zisejtfacturas;i++) {
            
            int facturaIdCap =Integer.parseInt(jtFacturas.getValueAt(i, 0).toString());
            
            
            if(facturaIdCap==facturaId){
        String montoTot_S=jtFacturas.getValueAt(i, 5).toString(); //Mucho cuidado si agrego una columna en la tabla verificar esto
            float montoTot= Float.parseFloat(montoTot_S);
            
            if(montoTot==0.0) {
            
                try {
            facturaControlador.eliminar(Integer.parseInt(jtfNumFactura.getText()));
        } catch (Exception ex) {
            Logger.getLogger(FacturaAnulacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        cargarTablaFactAnu ();
        
        LimpiarDetalleFacturas(Integer.parseInt(jtfNumFactura.getText()));
            
            }
            
            }
            
            
        }
        
            
        
    }//GEN-LAST:event_jbQuitarArticuloActionPerformed

    
    
    private void jtDetalleFacturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDetalleFacturasMouseClicked
        // TODO add your handling code here:
        int filaSele8= jtDetalleFacturas.getSelectedRow();
        
        String id= jtDetalleFacturas.getValueAt(filaSele8, 0).toString();
        
        jtfArticuloId.setText(id);
        
        
         
       
    
        
    }//GEN-LAST:event_jtDetalleFacturasMouseClicked

    private void jtfNumFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNumFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNumFacturaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbQuitarArticulo;
    private javax.swing.JTable jtDetalleFacturas;
    private javax.swing.JTable jtFacturas;
    private javax.swing.JTextField jtfArticuloId;
    private javax.swing.JTextField jtfNumFactura;
    // End of variables declaration//GEN-END:variables
}
