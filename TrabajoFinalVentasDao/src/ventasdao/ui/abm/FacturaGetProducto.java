/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventasdao.ui.abm;



/**
 *
 * @author Esteban DAlbano
 */
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ventasdao.controladores.CategoriaControlador;
import ventasdao.controladores.ClienteControlador;
import ventasdao.controladores.ProductoControlador;
import ventasdao.objetos.Categoria;
import ventasdao.objetos.Producto;
import ventasdao.ui.grilla.GrillaProducto;

 import ventasdao.controladores.FacturaProductoControlador;
import ventasdao.dominio.Conexion;
import ventasdao.objetos.DetalleFactura;
import ventasdao.ui.grilla.GrillaDetalleFactura;
import ventasdao.ui.abm.AbmFactura;
import java.util.*;



public class FacturaGetProducto extends javax.swing.JInternalFrame {
    
    

   private ProductoControlador controladorProducto;
   private CategoriaControlador categoriaControlador;
   private DefaultComboBoxModel modelCombo;
   private GrillaProducto grillaProducto;
   private GrillaDetalleFactura grillaDetalleFactura;
   
   
   DefaultTableModel modelo = new DefaultTableModel(); ////////////////////////
   private double totalD = 0; 
   private String totalS = null;
   private double cantidad =0;///////////////////////
   private String totalAnsS = null;
   
   
   
   String entradaUsuario = null;
   Integer validacion = 0; 
   String stockS = null;
   Integer stockI = 0;
   
   
   
    private DetalleFactura detallefactura;
    private FacturaProductoControlador facturaProductoControlador = new FacturaProductoControlador(); 
   
   
    
    
    public FacturaGetProducto() {
        initComponents();
        
       

           
        ArrayList<Producto> productos;
        
       controladorProducto = new ProductoControlador();
       categoriaControlador = new CategoriaControlador();
       
       
       try {
           productos = controladorProducto.listar();
           grillaProducto = new GrillaProducto(productos);
           jtListadoProductos.setModel(grillaProducto);
           
       } catch (Exception ex) {
           Logger.getLogger(FacturaGetProducto.class.getName()).log(Level.SEVERE, null, ex);
       }
       
       try {
           ArrayList<Categoria> categorias = categoriaControlador.listar();
           modelCombo = new DefaultComboBoxModel(categorias.toArray());
           jcbCategorias.setModel(modelCombo);
           
       } catch (Exception ex) {
           Logger.getLogger(FacturaGetProducto.class.getName()).log(Level.SEVERE, null, ex);
       }
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfNombre = new javax.swing.JTextField();
        jtfDescripcion = new javax.swing.JTextField();
        jcbCategorias = new javax.swing.JComboBox<>();
        jtfPrecio = new javax.swing.JTextField();
        jdcFechaCreacion = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jbRegistrarProducto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtListadoProductos = new javax.swing.JTable();
        jtfId = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfCategoriaId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfCategoriaNombre = new javax.swing.JTextField();
        jtfStock = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximizable(true);
        setResizable(true);
        setTitle("Productos");
        setPreferredSize(new java.awt.Dimension(1026, 560));
        setVisible(true);

        jtfNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNombreActionPerformed(evt);
            }
        });

        jtfDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDescripcionActionPerformed(evt);
            }
        });

        jcbCategorias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCategoriasItemStateChanged(evt);
            }
        });

        jdcFechaCreacion.setEnabled(false);

        jLabel1.setText("Nombre");

        jLabel2.setText("Descripcion");

        jLabel3.setText("Precio");

        jLabel4.setText("Filtrar por categoria");

        jLabel5.setText("Fecha Creacion");

        jbRegistrarProducto.setText("Registrar");
        jbRegistrarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRegistrarProductoActionPerformed(evt);
            }
        });

        jtListadoProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Cat_Id", "Nombre", "Descripcion", "Precio", "Stock", "Fecha_Creacion"
            }
        ));
        jtListadoProductos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtListadoProductos.setShowGrid(true);
        jtListadoProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtListadoProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtListadoProductos);
        if (jtListadoProductos.getColumnModel().getColumnCount() > 0) {
            jtListadoProductos.getColumnModel().getColumn(0).setPreferredWidth(50);
            jtListadoProductos.getColumnModel().getColumn(1).setPreferredWidth(50);
            jtListadoProductos.getColumnModel().getColumn(2).setPreferredWidth(150);
            jtListadoProductos.getColumnModel().getColumn(3).setPreferredWidth(200);
            jtListadoProductos.getColumnModel().getColumn(4).setPreferredWidth(50);
            jtListadoProductos.getColumnModel().getColumn(5).setPreferredWidth(50);
            jtListadoProductos.getColumnModel().getColumn(6).setPreferredWidth(150);
        }

        jtfId.setEditable(false);
        jtfId.setEnabled(false);

        jLabel6.setText("Id");

        jtfCategoriaId.setEditable(false);
        jtfCategoriaId.setEnabled(false);

        jLabel7.setText("Categoria_id");

        jtfCategoriaNombre.setEditable(false);
        jtfCategoriaNombre.setDisabledTextColor(new java.awt.Color(255, 102, 0));
        jtfCategoriaNombre.setEnabled(false);

        jLabel8.setText("Stock");

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jtfPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtfNombre)
                                        .addComponent(jtfDescripcion)
                                        .addComponent(jcbCategorias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jtfCategoriaId, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jtfCategoriaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jtfId)
                                        .addComponent(jdcFechaCreacion, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jtfStock, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jbRegistrarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCategoriaId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCategoriaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jdcFechaCreacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbRegistrarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        setBounds(0, 0, 1013, 557);
    }// </editor-fold>//GEN-END:initComponents

    private void jtfNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNombreActionPerformed

    private void jtfDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDescripcionActionPerformed

    private void jbRegistrarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRegistrarProductoActionPerformed
        // TODO add your handling code here:
       
        DefaultTableModel modelo = (DefaultTableModel) AbmFactura.jtListadoFacturacion.getModel();
        
        int filasele = jtListadoProductos.getSelectedRow();
        String [] registro = new String [5];
        
        
        registro [0] = jtListadoProductos.getValueAt(filasele, 2).toString();
        registro [1] = jtListadoProductos.getValueAt(filasele, 3).toString();
        registro [2] = jtListadoProductos.getValueAt(filasele, 4).toString();
       
        stockS =  jtListadoProductos.getValueAt(filasele, 5).toString();
        stockI = Integer.parseInt(stockS);
        do{
        entradaUsuario = JOptionPane.showInputDialog("Ingrese una cantidad:");
        validacion = Integer.parseInt(entradaUsuario);
        if(validacion<=0 || validacion>stockI)
            JOptionPane.showMessageDialog(null,"Por favor ingrese un valor mayor a cero y menor al stock");
        }while(validacion<0 || validacion>stockI);
        
        registro [3] =  entradaUsuario;
        
        registro [4] = jtListadoProductos.getValueAt(filasele, 0).toString();
    
        
        cantidad = Double.parseDouble(entradaUsuario);
        
       totalAnsS = AbmFactura.jtfTotal.getText();
        
        totalS= jtListadoProductos.getValueAt(filasele, 4).toString();
        
        totalD= Double.parseDouble(totalAnsS) + Double.parseDouble(totalS) * cantidad;
        
       
        
        String totalcadena= String.valueOf(totalD);
        
        
        
        modelo.addRow(registro);
        
        AbmFactura.jtListadoFacturacion.setModel(modelo);
        
        AbmFactura.jtfTotal.setText(totalcadena);
        

        
        
        
        
        /*
        detallefactura = new DetalleFactura();
        
       detallefactura.setId(Integer.parseInt(jtfId.getText()));
        detallefactura.setNombre(jtfNombre.getText());
        detallefactura.setDescripcion(jtfDescripcion.getText());
        detallefactura.setPrecio(Float.parseFloat(jtfPrecio.getText()));
        detallefactura.setCantidad(Integer.parseInt(jtfCantidad.getText()));
        
       
       try {
           //JOptionPane.showMessageDialog(null,"llega aquiA ");
          facturaProductoControlador.crear(detallefactura);
         
           //facturaProductoControlador.eliminar(detallefactura);
          
       } catch (Exception ex) {
           
           //JOptionPane.showMessageDialog(null,"cantidad: "+ detallefactura.getCantidad()+" facturaId: "+detallefactura.getFactura_id());
           Logger.getLogger(FacturaGetProducto.class.getName()).log(Level.SEVERE, null, ex);
       }
       
        
      
        //Este refresca la grilla una vez que se hizo una modificacion de lo contrario pierde referencia la grilla con los textfield
        facturaProductoControlador = new FacturaProductoControlador();
        ArrayList<DetalleFactura> detallefacturas = new ArrayList<>();

        try {
            
            AbmFactura vari = new AbmFactura();
            
         
            
            vari.refreshgrillafactura();
            
            detallefacturas = facturaProductoControlador.listar();
            
            grillaDetalleFactura = new GrillaDetalleFactura(detallefacturas);
            vari.jtListadoFacturacion.setModel(grillaDetalleFactura);
             
            //JOptionPane.showMessageDialog(null,"llega aqui D");
            
        } catch (Exception e) {
            e.printStackTrace ();
        }

        */
        
        
        
        //Esto limpia campos
        jtfId.setText("");
        jtfNombre.setText("");
        jtfDescripcion.setText("");
        jtfCategoriaId.setText("");
        jtfCategoriaNombre.setText("");
        jtfPrecio.setText("");
        jtfStock.setText("");
        jdcFechaCreacion.setDate(null);
       // jtfCantidad.setText("");
       
        
        
        
    }//GEN-LAST:event_jbRegistrarProductoActionPerformed

    private void jtListadoProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtListadoProductosMouseClicked
        // TODO add your handling code here:
        Producto producto = grillaProducto.getProductoFromRow(jtListadoProductos.getSelectedRow());  //Obtiene el objeto producto con todos sus atributos de la fila seleccionada en la grillaProducto
        categoriaControlador = new CategoriaControlador();
        
         
     
       jtfId.setText( producto.getId().toString() );
        jtfNombre.setText(producto.getNombre());
       jtfDescripcion.setText(producto.getDescripcion());
       jtfPrecio.setText( producto.getPrecio().toString() );
        jtfStock.setText( producto.getStock().toString() );
       
          // jcbCategorias.setSelectedItem(categoria.getDenominacion());
       jdcFechaCreacion.setDate(producto.getFechaCreacion());
       jtfCategoriaId.setText(producto.getCategoria_id().toString());
       
       
      /* 
       try {
           //Integer aux = Integer.parseInt(jtfCategoriaId.getText());
           ArrayList<Categoria> categorias = new ArrayList();
           Categoria categoria = new Categoria();
           
           categorias = categoriaControlador.extraer();
           int dim = categorias.size();
           int ids = Integer.parseInt(jtfCategoriaId.getText());
           
           for(int i=0;i<=dim;i++){
               
               categoria = categorias.get(i);
               if(categoria.getId()==ids)
               jtfCategoriaNombre.setText(categoria.getDenominacion());
           }
           
      
           
       } catch (Exception ex) {
           Logger.getLogger(FacturaGetProducto.class.getName()).log(Level.SEVERE, null, ex);
       }
       
       
       */
       
    }//GEN-LAST:event_jtListadoProductosMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         dispose(); 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jcbCategoriasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCategoriasItemStateChanged
       try {                                               
           // TODO add your handling code here:
           Categoria categoria = new Categoria();
           
           String cat_name = jcbCategorias.getSelectedItem().toString();
           
           categoria = facturaProductoControlador.extraer(cat_name);
           
           
           
           ArrayList<Producto> productos = new ArrayList<>();
           
           facturaProductoControlador = new FacturaProductoControlador();
           categoriaControlador = new CategoriaControlador();
           
           
           try {
               productos = (ArrayList<Producto>) facturaProductoControlador.listar(categoria.getId());
               grillaProducto = new GrillaProducto(productos);
               jtListadoProductos.setModel(grillaProducto);
               
           } catch (Exception ex) {
               Logger.getLogger(FacturaGetProducto.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           
       } catch (Exception ex) {
           Logger.getLogger(FacturaGetProducto.class.getName()).log(Level.SEVERE, null, ex);
       }
        
        
    }//GEN-LAST:event_jcbCategoriasItemStateChanged

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbRegistrarProducto;
    private javax.swing.JComboBox<String> jcbCategorias;
    private com.toedter.calendar.JDateChooser jdcFechaCreacion;
    private javax.swing.JTable jtListadoProductos;
    private javax.swing.JTextField jtfCategoriaId;
    private javax.swing.JTextField jtfCategoriaNombre;
    private javax.swing.JTextField jtfDescripcion;
    private javax.swing.JTextField jtfId;
    private javax.swing.JTextField jtfNombre;
    private javax.swing.JTextField jtfPrecio;
    private javax.swing.JTextField jtfStock;
    // End of variables declaration//GEN-END:variables

    private void limpiarCampos() {
        
        jtfDescripcion.setText("");
        jtfNombre.setText("");
        jtfPrecio.setText("");
        
    }
}
