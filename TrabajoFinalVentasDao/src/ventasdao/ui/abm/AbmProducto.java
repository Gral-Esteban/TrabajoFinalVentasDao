/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventasdao.ui.abm;



/**
 *
 * @author Esteban DAlbano
 */
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import ventasdao.controladores.CategoriaControlador;
import ventasdao.controladores.ImportarArchivoControlador;
import ventasdao.controladores.ProductoControlador;
import ventasdao.objetos.Categoria;
import ventasdao.objetos.Producto;
import ventasdao.ui.grilla.GrillaProducto;


public class AbmProducto extends javax.swing.JInternalFrame {

   private ProductoControlador controladorProducto;
   private CategoriaControlador categoriaControlador;
   private DefaultComboBoxModel modelCombo;
   private GrillaProducto grillaProducto;
   
   
   ImportarArchivoControlador importar = new ImportarArchivoControlador();
   
   
    
    public AbmProducto() {
        initComponents();
        
       

           
        ArrayList<Producto> productos;
        
       controladorProducto = new ProductoControlador();
       categoriaControlador = new CategoriaControlador();
       
       
       try {
           productos = controladorProducto.listar();
           grillaProducto = new GrillaProducto(productos);
           jtListadoProductos.setModel(grillaProducto);
           
       } catch (Exception ex) {
           Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
       }
       
       try {
           ArrayList<String> categorias = categoriaControlador.listar2();
           modelCombo = new DefaultComboBoxModel(categorias.toArray());
           jcbCategorias.setModel(modelCombo);
           
       } catch (Exception ex) {
           Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
       }
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfCodigo = new javax.swing.JTextField();
        jtfDescripcion = new javax.swing.JTextField();
        jcbCategorias = new javax.swing.JComboBox<>();
        jtfPrecioVenta = new javax.swing.JTextField();
        jdcFechaIngreso = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jbRegistrarProducto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtListadoProductos = new javax.swing.JTable();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jtfStock = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jbImportar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jtfPrecioCosto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtfPrecioDolar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jtfOrigen = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtfProveedor = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jtfImagen = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jbReset = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jbBackup = new javax.swing.JButton();
        jtfFiltroCodigo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfFiltroDescripcion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Productos");
        setPreferredSize(new java.awt.Dimension(1026, 560));
        setVisible(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtfCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoActionPerformed(evt);
            }
        });
        getContentPane().add(jtfCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 130, -1));

        jtfDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDescripcionActionPerformed(evt);
            }
        });
        getContentPane().add(jtfDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 420, 880, -1));

        jcbCategorias.setEditable(true);
        getContentPane().add(jcbCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 133, -1));
        getContentPane().add(jtfPrecioVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 130, -1));
        getContentPane().add(jdcFechaIngreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, 130, -1));

        jLabel1.setText("Codigo");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 48, 20));

        jLabel2.setText("Descripcion");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 420, 60, 20));

        jLabel3.setText("P_venta");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 65, 20));

        jLabel4.setText("Categoria");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 20));

        jLabel5.setText("Fecha Ingreso");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 71, 20));

        jbRegistrarProducto.setText("Registrar");
        jbRegistrarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRegistrarProductoActionPerformed(evt);
            }
        });
        getContentPane().add(jbRegistrarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 460, 120, 45));

        jtListadoProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Descripcion", "P_Dolar", "P_Costo", "P_Venta", "Origen", "Proveedor", "Stock", "Imagen", "Fecha_Ingreso", "Categoria"
            }
        ));
        jtListadoProductos.setShowGrid(true);
        jtListadoProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtListadoProductosMouseClicked(evt);
            }
        });
        jtListadoProductos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtListadoProductosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtListadoProductos);
        if (jtListadoProductos.getColumnModel().getColumnCount() > 0) {
            jtListadoProductos.getColumnModel().getColumn(0).setPreferredWidth(150);
            jtListadoProductos.getColumnModel().getColumn(1).setPreferredWidth(200);
            jtListadoProductos.getColumnModel().getColumn(9).setPreferredWidth(150);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 11, 997, 396));

        jbModificar.setText("Modificar");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });
        getContentPane().add(jbModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 460, 120, 45));

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jbEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 460, 120, 45));
        getContentPane().add(jtfStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, 130, -1));

        jLabel8.setText("Stock");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 50, 20));

        jbImportar.setText("Importar");
        jbImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImportarActionPerformed(evt);
            }
        });
        getContentPane().add(jbImportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 460, 120, 46));

        jLabel9.setText("P_costo");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 61, 20));
        getContentPane().add(jtfPrecioCosto, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 130, -1));

        jLabel10.setText("P_dolar");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 60, 20));
        getContentPane().add(jtfPrecioDolar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 130, -1));

        jLabel11.setText("Origen");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 60, 20));

        jtfOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfOrigenActionPerformed(evt);
            }
        });
        getContentPane().add(jtfOrigen, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 130, -1));

        jLabel12.setText("Proveedor");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 60, 20));

        jtfProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfProveedorActionPerformed(evt);
            }
        });
        getContentPane().add(jtfProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 130, -1));

        jLabel13.setText("Imagen");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 520, 53, 20));

        jtfImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfImagenActionPerformed(evt);
            }
        });
        getContentPane().add(jtfImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 520, 880, -1));
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 200, 180));

        jbReset.setText("Reset");
        jbReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbResetMouseEntered(evt);
            }
        });
        jbReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbResetActionPerformed(evt);
            }
        });
        getContentPane().add(jbReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 460, 120, 46));

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jbSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 460, 120, 46));

        jbBackup.setText("Backup");
        jbBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBackupActionPerformed(evt);
            }
        });
        getContentPane().add(jbBackup, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 460, 120, 46));
        getContentPane().add(jtfFiltroCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 130, -1));

        jLabel6.setText("F. Codigo");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 60, 20));
        getContentPane().add(jtfFiltroDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 130, -1));

        jLabel7.setText("F. Descripcion");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 60, 20));

        setBounds(0, 0, 1264, 595);
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoActionPerformed

    private void jtfDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDescripcionActionPerformed

    private void jbRegistrarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRegistrarProductoActionPerformed
        // TODO add your handling code here:
        Producto producto = new Producto();
        
        producto.setCodigo(jtfCodigo.getText());
        producto.setDescripcion(jtfDescripcion.getText());
        producto.setP_dolar(Float.parseFloat(jtfPrecioDolar.getText()));
        producto.setP_costo(Float.parseFloat(jtfPrecioCosto.getText()));
        producto.setP_venta(Float.parseFloat(jtfPrecioVenta.getText()));
        producto.setOrigen(jtfOrigen.getText());
        producto.setProveedor(jtfProveedor.getText());
        producto.setStock(Integer.parseInt(jtfStock.getText()));
        producto.setCategoria((String) jcbCategorias.getSelectedItem());   //Se esta casteando que el resultado de jcbCategorias.getSelectedItem() sea del tipo Categoria
        producto.setImagen(jtfImagen.getText());
        producto.setFechaIngreso(jdcFechaIngreso.getDate());
        
        
        
        
       try {
           controladorProducto.crear(producto);
           limpiarCampos();
       } catch (Exception ex) {
           Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
       }
       
        //Este refresca la grilla una vez que se hizo una modificacion de lo contrario pierde referencia la grilla con los textfield
        controladorProducto = new ProductoControlador();
        ArrayList<Producto> productos = new ArrayList<>();

        try {
            productos = controladorProducto.listar();
        } catch (Exception e) {
            e.printStackTrace ();
        }

        grillaProducto = new GrillaProducto(productos);
        jtListadoProductos.setModel(grillaProducto);
        
        
        //Esto limpia campos
        limpiarCampos();
       
        
        
        
    }//GEN-LAST:event_jbRegistrarProductoActionPerformed

    private void jtListadoProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtListadoProductosMouseClicked
        // TODO add your handling code here:
        Producto producto = grillaProducto.getProductoFromRow(jtListadoProductos.getSelectedRow());  //Obtiene el objeto producto con todos sus atributos de la fila seleccionada en la grillaProducto
        categoriaControlador = new CategoriaControlador();
        
         
     
       
        jtfCodigo.setText(producto.getCodigo());
       jtfDescripcion.setText(producto.getDescripcion());
       jtfPrecioDolar.setText( producto.getP_dolar().toString() );
       jtfPrecioCosto.setText( producto.getP_costo().toString() );
       jtfPrecioVenta.setText( producto.getP_venta().toString() );
       
       jtfOrigen.setText(producto.getOrigen());
       jtfProveedor.setText(producto.getProveedor());
       
        jtfStock.setText( producto.getStock().toString() );
        
         jtfImagen.setText(producto.getImagen());
       
          // jcbCategorias.setSelectedItem(categoria.getDenominacion());
       jdcFechaIngreso.setDate(producto.getFechaIngreso());
       jcbCategorias.setSelectedItem(producto.getCategoria());                   //#############Rivisar esto si funciona bien##################
       
       /* try {
           //Integer aux = Integer.parseInt(jtfCategoriaId.getText());
           ArrayList<Categoria> categorias = new ArrayList();
           Categoria categoria = new Categoria();
           
           categorias = categoriaControlador.extraer();
           int dim = categorias.size();
           int ids = Integer.parseInt(jtfCategoriaId.getText());
           
           for(int i=0;i<=dim;i++){
               
               categoria = categorias.get(i);
               if(categoria.getId()==ids)
               jtfCategoriaNombre.setText(categoria.getDenominacion());
           }
           
      
           
       } catch (Exception ex) {
           Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
       }
       
       */
       
    }//GEN-LAST:event_jtListadoProductosMouseClicked

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:
       Producto producto = new Producto();
        producto.setCodigo(jtfCodigo.getText());
        producto.setProveedor(jtfProveedor.getText());
        
        try {
            controladorProducto.eliminar(producto);
        } catch (Exception ex) {
            Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            jtListadoProductos.setModel(new GrillaProducto(controladorProducto.listar()));
        } catch (Exception ex) {
            Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
        //Este refresca la grilla una vez que se hizo una modificacion de lo contrario pierde referencia la grilla con los textfield
        controladorProducto = new ProductoControlador();
        ArrayList<Producto> productos = new ArrayList<>();

        try {
            productos = controladorProducto.listar();
        } catch (Exception e) {
            e.printStackTrace ();
        }

        grillaProducto = new GrillaProducto(productos);
        jtListadoProductos.setModel(grillaProducto);
        
        
        
         //Esto limpia campos
        limpiarCampos();
        
    }//GEN-LAST:event_jbEliminarActionPerformed

    
    
    
    
    
    
    
    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        // TODO add your handling code here:
           try {
            
            Producto producto = new Producto();
            
            
          
            producto.setCodigo( jtfCodigo.getText() );
            producto.setDescripcion( jtfDescripcion.getText() );
            producto.setP_dolar( Float.parseFloat( jtfPrecioDolar.getText() ) );
            producto.setP_costo( Float.parseFloat( jtfPrecioCosto.getText() ) );
            producto.setP_venta( Float.parseFloat( jtfPrecioVenta.getText() ) );
            producto.setOrigen( jtfOrigen.getText() );
            producto.setProveedor( jtfProveedor.getText() );
            producto.setStock(Integer.parseInt(jtfStock.getText()));
            producto.setImagen( jtfImagen.getText() );
            producto.setFechaIngreso( ( jdcFechaIngreso.getDate()) );
            producto.setCategoria(jcbCategorias.getSelectedItem().toString());
            
            
            controladorProducto.modificar(producto);
        } 
        catch (Exception ex) {
            Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            jtListadoProductos.setModel( new GrillaProducto( controladorProducto.listar() ));
        } 
        catch (Exception ex) {
            Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
       
        //Este refresca la grilla una vez que se hizo una modificacion de lo contrario pierde referencia la grilla con los textfield
        controladorProducto = new ProductoControlador();
        ArrayList<Producto> productos = new ArrayList<>();

        try {
            productos = controladorProducto.listar();
        } catch (Exception e) {
            e.printStackTrace ();
        }

        grillaProducto = new GrillaProducto(productos);
        jtListadoProductos.setModel(grillaProducto);
        
        
        
         //Esto limpia campos
       limpiarCampos();
        
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImportarActionPerformed
        // TODO add your handling code here:
         JFileChooser chooser = new JFileChooser();
        String absolutePath = null;
        
        chooser.setPreferredSize(new Dimension(600, 400));
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        //chooser.setSize(600, 800);
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            absolutePath = chooser.getSelectedFile().getAbsolutePath();
        //JOptionPane.showMessageDialog(rootPane, "You chose to open this directory: " +absolutePath);    
        /*System.out.println("You chose to open this directory: " +
        chooser.getSelectedFile().getAbsolutePath());*/
        }
        
        
        try {
            importar.importarExcel(absolutePath);
            JOptionPane.showMessageDialog(rootPane, "Se importo la lista con exito");
        } 
        catch (Exception ex) {
            System.out.println("Error al querer importar el archivo");
        }
        
        
        refresh();
        
        
        
        
    }//GEN-LAST:event_jbImportarActionPerformed

    private void jtfOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfOrigenActionPerformed

    private void jtfProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfProveedorActionPerformed

    private void jtfImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfImagenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfImagenActionPerformed

    private void jbResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbResetMouseEntered
        // TODO add your handling code here:
        jbReset.setToolTipText("Esta opcion borra todos los datos de la tabla");
    }//GEN-LAST:event_jbResetMouseEntered

    private void jtListadoProductosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtListadoProductosKeyReleased
        // TODO add your handling code here:
        
         if( (evt.getKeyCode()==KeyEvent.VK_DOWN) ||(evt.getKeyCode()==KeyEvent.VK_UP) )  {
        
        
         Producto producto = grillaProducto.getProductoFromRow(jtListadoProductos.getSelectedRow());  //Obtiene el objeto producto con todos sus atributos de la fila seleccionada en la grillaProducto
        categoriaControlador = new CategoriaControlador();
        
         
     
       //jtfId.setText( producto.getId().toString() );
        jtfCodigo.setText(producto.getCodigo());
       jtfDescripcion.setText(producto.getDescripcion());
       jtfPrecioDolar.setText( producto.getP_dolar().toString() );
       jtfPrecioCosto.setText( producto.getP_costo().toString() );
       jtfPrecioVenta.setText( producto.getP_venta().toString() );
       jtfOrigen.setText(producto.getOrigen());
       jtfProveedor.setText(producto.getProveedor());
        jtfStock.setText( producto.getStock().toString() );
       //jtfCategoria.setText(producto.getCategoria());
       //jcbCategorias.setSelectedItem(producto.getCategoria());
       jdcFechaIngreso.setDate(producto.getFechaIngreso());
      // jtfCategoriaId.setText(producto.getCategoria_id().toString());
        }
    }//GEN-LAST:event_jtListadoProductosKeyReleased

    private void jbResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbResetActionPerformed
       // TODO add your handling code here:
        
        try {
          
           controladorProducto.reset();
       } catch (SQLException ex) {
           Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
       } catch (ClassNotFoundException ex) {
           Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
       } 
        
        
        refresh();
        
    }//GEN-LAST:event_jbResetActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBackupActionPerformed
        // TODO add your handling code here:
    
        abrirarchivo("C://Users//Esteban DAlbano//Documents//NetBeansProjects//VentasDAOs//TrabajoFinalVentasDao//backup/backupDB.bat");


        
    }//GEN-LAST:event_jbBackupActionPerformed

    
    public void abrirarchivo(String archivo){

     try {

            File objetofile = new File (archivo);
            Desktop.getDesktop().open(objetofile);

     }catch (IOException ex) {

            System.out.println(ex);

     }

}                         
    
    
    

   public void refresh() {
        
        /*Aqui refrescamos la tabla luego de hacer el import */
        ArrayList<Producto> productos;

        controladorProducto = new ProductoControlador();
        categoriaControlador = new CategoriaControlador();

        try {
            productos = controladorProducto.listar();
            grillaProducto = new GrillaProducto(productos);
            jtListadoProductos.setModel(grillaProducto);

        } catch (Exception ex) {
            Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            ArrayList<String> categorias = categoriaControlador.listar2();
            modelCombo = new DefaultComboBoxModel(categorias.toArray());
            jcbCategorias.setModel(modelCombo);

        } catch (Exception ex) {
            Logger.getLogger(AbmProducto.class.getName()).log(Level.SEVERE, null, ex);
       }
        
        
        
    }
    
    
    
   
   
    
    
    
    
    
   
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBackup;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbImportar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbRegistrarProducto;
    private javax.swing.JButton jbReset;
    private javax.swing.JButton jbSalir;
    public javax.swing.JComboBox<String> jcbCategorias;
    private com.toedter.calendar.JDateChooser jdcFechaIngreso;
    public javax.swing.JTable jtListadoProductos;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfDescripcion;
    private javax.swing.JTextField jtfFiltroCodigo;
    private javax.swing.JTextField jtfFiltroDescripcion;
    private javax.swing.JTextField jtfImagen;
    private javax.swing.JTextField jtfOrigen;
    private javax.swing.JTextField jtfPrecioCosto;
    private javax.swing.JTextField jtfPrecioDolar;
    private javax.swing.JTextField jtfPrecioVenta;
    private javax.swing.JTextField jtfProveedor;
    private javax.swing.JTextField jtfStock;
    // End of variables declaration//GEN-END:variables

    private void limpiarCampos() {
        
        jtfDescripcion.setText("");
        jtfCodigo.setText("");
        jtfPrecioVenta.setText("");
        jtfPrecioCosto.setText("");
        jtfPrecioDolar.setText("");
        jtfOrigen.setText("");
        jtfProveedor.setText("");
        jtfStock.setText("");
        jcbCategorias.setToolTipText("");
        jtfImagen.setText("");
        jdcFechaIngreso.setToolTipText("");
        jdcFechaIngreso.setDate(null);
    }
}
